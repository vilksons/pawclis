\@definelabel{p.Introduction}{1}{page}{5}
\@definelabel{p.compiler.prefixfile}{1}{page}{5}
\@definepageanchor{1}
\@definelabel{p.The compiler}{4}{page}{8}
\@definelabel{p.compiler}{4}{page}{8}
\@definepageanchor{4}
\@definelabel{p.Setting up the compiler}{4}{page}{8}
\@definelabel{p.Installation}{4}{page}{8}
\@definepageanchor{4}
\@definelabel{mb.1}{4}{marginbox}{8}
\@definelabel{p.The configuration file}{4}{page}{8}
\@definelabel{p.compiler.cfgfile}{4}{page}{8}
\@definepageanchor{4}
\@definelabel{p.Errors}{5}{page}{9}
\@definelabel{p.Compiler errors}{5}{page}{9}
\@definelabel{p.Run time errors}{5}{page}{9}
\@definelabel{mb.2}{5}{marginbox}{9}
\@definelabel{p.The abstract machine}{6}{page}{10}
\@definelabel{p.tools.amx}{6}{page}{10}
\@definepageanchor{6}
\@definelabel{p.Deployment / installation}{6}{page}{10}
\@definelabel{p.amx.deployment}{6}{page}{10}
\@definepageanchor{6}
\@definelabel{mb.3}{6}{marginbox}{10}
\@definelabel{p.Using the abstract machine}{6}{page}{10}
\@definelabel{p.prun0}{6}{page}{10}
\@definelabel{p.LoadProgram}{8}{page}{11}
\@definepageanchor{8}
\@definelabel{p.FreeProgram}{9}{page}{13}
\@definelabel{p.Controlling program execution}{10}{page}{13}
\@definelabel{p.dbg.hook}{10}{page}{13}
\@definepageanchor{10}
\@definepageanchor{11}
\@definelabel{mb.4}{11}{marginbox}{15}
\@definelabel{p.A smarter ``break-out'' hook}{11}{page}{15}
\@definelabel{p.Monitoring stack/heap usage}{12}{page}{16}
\@definelabel{p.userdata.ex}{12}{page}{16}
\@definepageanchor{12}
\@definelabel{mb.5}{12}{marginbox}{16}
\@definepageanchor{13}
\@definelabel{p.Preparing for memory-hungry scripts}{13}{page}{17}
\@definelabel{mb.6}{13}{marginbox}{17}
\@definepageanchor{14}
\@definelabel{mb.7}{15}{marginbox}{19}
\@definelabel{p.Calling ``public'' functions}{16}{page}{20}
\@definepageanchor{16}
\@definepageanchor{17}
\@definelabel{mb.8}{17}{marginbox}{21}
\@definelabel{p.prun.rot13}{17}{page}{21}
\@definepageanchor{18}
\@definepageanchor{19}
\@definepageanchor{20}
\@definelabel{p.ex.trimmed}{20}{page}{24}
\@definelabel{p.Function reference}{22}{page}{26}
\@definelabel{mb.9}{22}{marginbox}{26}
\@definelabel{p.amx.Address}{22}{page}{26}
\@definepageanchor{22}
\@definelabel{p.amx.Align}{22}{page}{26}
\@definepageanchor{22}
\@definelabel{p.amx.AlignCell}{23}{page}{27}
\@definepageanchor{23}
\@definelabel{p.amx.Allot}{23}{page}{27}
\@definepageanchor{23}
\@definelabel{p.amx.Callback}{24}{page}{28}
\@definepageanchor{24}
\@definelabel{mb.10}{24}{marginbox}{28}
\@definelabel{p.amx.ctof}{24}{page}{28}
\@definepageanchor{24}
\@definelabel{p.amx.Exec}{25}{page}{29}
\@definepageanchor{25}
\@definelabel{p.amx.FindNative}{25}{page}{29}
\@definepageanchor{25}
\@definelabel{p.amx.FindPublic}{25}{page}{29}
\@definepageanchor{25}
\@definelabel{p.amx.FindPubVar}{26}{page}{30}
\@definepageanchor{26}
\@definelabel{p.amx.Flags}{26}{page}{30}
\@definepageanchor{26}
\@definelabel{p.amx.ftoc}{27}{page}{31}
\@definepageanchor{27}
\@definelabel{p.amx.GetNative}{27}{page}{31}
\@definepageanchor{27}
\@definelabel{p.amx.GetPublic}{28}{page}{32}
\@definepageanchor{28}
\@definelabel{p.amx.GetPubVar}{28}{page}{32}
\@definepageanchor{28}
\@definelabel{p.amx.GetString}{29}{page}{33}
\@definepageanchor{29}
\@definelabel{p.amx.GetUserData}{29}{page}{33}
\@definepageanchor{29}
\@definelabel{p.amx.Init}{30}{page}{34}
\@definepageanchor{30}
\@definelabel{mb.11}{30}{marginbox}{34}
\@definepageanchor{30}
\@definelabel{p.amx.InitJIT}{30}{page}{34}
\@definepageanchor{30}
\@definelabel{p.amx.MemInfo}{31}{page}{35}
\@definepageanchor{31}
\@definelabel{p.amx.NameLength}{32}{page}{36}
\@definepageanchor{32}
\@definelabel{p.amx.NativeInfo}{32}{page}{36}
\@definepageanchor{32}
\@definelabel{p.amx.NumNatives}{32}{page}{36}
\@definepageanchor{32}
\@definelabel{p.amx.NumPublics}{33}{page}{37}
\@definepageanchor{33}
\@definelabel{p.amx.NumPubVars}{33}{page}{37}
\@definepageanchor{33}
\@definelabel{p.amx.Push}{33}{page}{37}
\@definepageanchor{33}
\@definelabel{p.amx.PushAddress}{34}{page}{38}
\@definepageanchor{34}
\@definelabel{p.amx.PushArray}{34}{page}{38}
\@definepageanchor{34}
\@definelabel{p.amx.PushString}{35}{page}{39}
\@definepageanchor{35}
\@definelabel{p.amx.RaiseError}{35}{page}{39}
\@definepageanchor{35}
\@definelabel{p.amx.Register}{36}{page}{40}
\@definepageanchor{36}
\@definelabel{p.amx.Release}{36}{page}{40}
\@definepageanchor{36}
\@definelabel{p.amx.SetCallback}{37}{page}{41}
\@definepageanchor{37}
\@definelabel{p.amx.SetDebugHook}{37}{page}{41}
\@definepageanchor{37}
\@definelabel{p.amx.SetString}{37}{page}{41}
\@definepageanchor{37}
\@definepageanchor{38}
\@definelabel{p.amx.SetUserData}{38}{page}{42}
\@definepageanchor{38}
\@definelabel{p.amx.StrLen}{39}{page}{43}
\@definepageanchor{39}
\@definelabel{p.amx.StrParam}{39}{page}{43}
\@definepageanchor{39}
\@definelabel{p.amx.UTF8Check}{40}{page}{44}
\@definepageanchor{40}
\@definelabel{p.amx.UTF8Get}{40}{page}{44}
\@definepageanchor{40}
\@definelabel{p.amx.UTF8Len}{41}{page}{45}
\@definepageanchor{41}
\@definelabel{p.amx.UTF8Put}{41}{page}{45}
\@definepageanchor{41}
\@definelabel{p.Error codes (run-time errors)}{42}{page}{46}
\@definelabel{p.amx.errors}{42}{page}{46}
\@definepageanchor{42}
\@definepageanchor{43}
\@definelabel{p.Extension modules}{44}{page}{48}
\@definelabel{p.extension.modules}{44}{page}{48}
\@definepageanchor{44}
\@definelabel{p.Creating an extension module}{44}{page}{48}
\@definelabel{p.1. Writing the native functions}{44}{page}{48}
\@definepageanchor{44}
\@definepageanchor{45}
\@definelabel{mb.12}{45}{marginbox}{49}
\@definelabel{p.2. Linking the functions to the abstract machine}{45}{page}{49}
\@definelabel{p.extension.linking}{45}{page}{49}
\@definelabel{p.extension.power.ex}{45}{page}{49}
\@definelabel{mb.13}{46}{marginbox}{50}
\@definepageanchor{46}
\@definelabel{p.3. writing an include file for the native functions}{46}{page}{50}
\@definepageanchor{46}
\@definelabel{p.ex.power.natives}{47}{page}{51}
\@definepageanchor{47}
\@definelabel{p.return.array.decl}{47}{page}{51}
\@definelabel{p.Writing ``wrappers''}{47}{page}{51}
\@definepageanchor{47}
\@definelabel{p.Pass-by-value, the simplest case}{47}{page}{51}
\@definelabel{p.ex.simple.wrapper}{47}{page}{51}
\@definepageanchor{47}
\@definelabel{p.Floating point}{48}{page}{51}
\@definepageanchor{48}
\@definelabel{p.Strings}{48}{page}{52}
\@definepageanchor{48}
\@definepageanchor{49}
\@definelabel{p.ex.strparam}{49}{page}{53}
\@definepageanchor{50}
\@definelabel{p.Pass-by-reference}{50}{page}{54}
\@definepageanchor{50}
\@definelabel{p.Arrays}{50}{page}{54}
\@definelabel{p.ex.array.wrapper}{50}{page}{54}
\@definepageanchor{50}
\@definelabel{mb.14}{50}{marginbox}{54}
\@definelabel{p.ex.array2.wrapper}{51}{page}{55}
\@definepageanchor{51}
\@definelabel{p.Returning arrays}{51}{page}{55}
\@definelabel{p.return.array.imp}{51}{page}{55}
\@definelabel{p.Wrapping class methods (C++ interface)}{52}{page}{56}
\@definepageanchor{52}
\@definelabel{mb.15}{53}{marginbox}{57}
\@definepageanchor{53}
\@definepageanchor{54}
\@definelabel{p.Dynamically loadable extension modules}{54}{page}{58}
\@definelabel{p.extension.dynaload}{54}{page}{58}
\@definepageanchor{54}
\@definepageanchor{55}
\@definelabel{p.Error checking in native functions}{55}{page}{59}
\@definepageanchor{55}
\@definelabel{mb.16}{56}{marginbox}{59}
\@definepageanchor{56}
\@definelabel{mb.17}{56}{marginbox}{60}
\@definelabel{p.Customizing the native function callback}{56}{page}{60}
\@definelabel{p.amx.dispatcher}{56}{page}{60}
\@definepageanchor{56}
\@definelabel{p.nativetable}{57}{page}{61}
\@definepageanchor{57}
\@definelabel{mb.18}{57}{marginbox}{61}
\@definelabel{p.Building the compiler}{59}{page}{63}
\@definelabel{Building the compiler}{65}{Appendix}{63}
\@definepageanchor{59}
\@definelabel{p.Compile-time options}{59}{page}{63}
\@definepageanchor{59}
\@definepageanchor{60}
\@definelabel{p.Summary of compiler macros}{60}{page}{64}
\@definepageanchor{60}
\@definepageanchor{61}
\@definelabel{p.Embedding the compiler into an application}{61}{page}{65}
\@definelabel{p.libpawnc}{61}{page}{65}
\@definepageanchor{61}
\@definelabel{p.Building the Abstract Machine}{63}{page}{67}
\@definelabel{Building the Abstract Machine}{66}{Appendix}{67}
\@definepageanchor{63}
\@definepageanchor{64}
\@definelabel{mb.19}{64}{marginbox}{68}
\@definepageanchor{64}
\@definelabel{p.amx.callconv}{64}{page}{68}
\@definepageanchor{64}
\@definepageanchor{65}
\@definelabel{p.threading.method}{65}{page}{69}
\@definepageanchor{65}
\@definelabel{p.Summary of Abstract Machine macros}{65}{page}{69}
\@definepageanchor{65}
\@definelabel{p.amx.libpath}{65}{page}{69}
\@definepageanchor{66}
\@definepageanchor{67}
\@definelabel{p.ANSI C}{67}{page}{71}
\@definepageanchor{67}
\@definelabel{p.Alternate P-code interpreter: GNU GCC}{67}{page}{71}
\@definelabel{p.amx.gcc}{68}{page}{71}
\@definepageanchor{68}
\@definelabel{p.Alternate P-code interpreter: assembler}{68}{page}{72}
\@definelabel{p.amx.asm}{68}{page}{72}
\@definepageanchor{68}
\@definepageanchor{69}
\@definepageanchor{70}
\@definelabel{p.Just-In-Time compiler}{71}{page}{75}
\@definelabel{p.amx.jit}{71}{page}{75}
\@definepageanchor{71}
\@definepageanchor{72}
\@definepageanchor{73}
\@definelabel{p.Minimizing the size of the abstract machine}{73}{page}{77}
\@definepageanchor{73}
\@definelabel{p.Adding a terminal to the abstract machine}{74}{page}{78}
\@definelabel{p.terminal}{74}{page}{78}
\@definepageanchor{75}
\@definelabel{p.Support for floating point in the Abstract Machine}{75}{page}{79}
\@definepageanchor{75}
\@definepageanchor{76}
\@definelabel{p.Compiling ``dynamically loadable'' modules}{76}{page}{80}
\@definelabel{p.extension.dynaload.imp}{76}{page}{80}
\@definepageanchor{76}
\@definelabel{mb.20}{77}{marginbox}{80}
\@definepageanchor{77}
\@definelabel{p.Using CMake}{79}{page}{83}
\@definelabel{Using CMake}{67}{Appendix}{83}
\@definepageanchor{79}
\@definelabel{p.Abstract Machine reference}{80}{page}{84}
\@definelabel{Abstract Machine reference}{68}{Appendix}{84}
\@definelabel{p.Register layout}{80}{page}{84}
\@definepageanchor{80}
\@definelabel{p.Memory image}{80}{page}{84}
\@definelabel{amxinmemory}{2}{Figure}{85}
\@definelabel{p.amxinmemory}{81}{page}{85}
\@definepageanchor{81}
\@definelabel{p.amx.header}{81}{page}{85}
\@definepageanchor{81}
\@definepageanchor{82}
\@definelabel{p.Instruction reference}{83}{page}{87}
\@definepageanchor{84}
\@definelabel{p.Branching}{88}{page}{92}
\@definepageanchor{88}
\@definelabel{p.Macro instructions}{89}{page}{93}
\@definepageanchor{89}
\@definelabel{p.Opcode packing}{89}{page}{93}
\@definepageanchor{89}
\@definelabel{p.Native call opcodes}{89}{page}{93}
\@definelabel{p.native.call.opcodes}{89}{page}{93}
\@definepageanchor{89}
\@definepageanchor{90}
\@definelabel{p.Cross-platform support}{90}{page}{94}
\@definepageanchor{90}
\@definelabel{p.The ``switch'' instruction and case table lay-out}{91}{page}{95}
\@definelabel{p.Debugging support}{92}{page}{96}
\@definelabel{Debugging support}{69}{Appendix}{96}
\@definepageanchor{92}
\@definelabel{mb.21}{92}{marginbox}{96}
\@definepageanchor{92}
\@definelabel{p.The file table}{92}{page}{96}
\@definelabel{p.The line table}{93}{page}{97}
\@definelabel{p.The symbol table}{93}{page}{97}
\@definelabel{p.The tag name table}{94}{page}{98}
\@definelabel{p.The automaton table}{95}{page}{98}
\@definelabel{p.The state table}{95}{page}{99}
\@definelabel{p.Functions}{95}{page}{99}
\@definelabel{p.Code generation notes}{96}{page}{100}
\@definelabel{Code generation notes}{70}{Appendix}{100}
\@definepageanchor{96}
\@definelabel{p.multdim-implementation}{97}{page}{101}
\@definepageanchor{98}
\@definelabel{p.Adding a garbage collector}{99}{page}{103}
\@definelabel{Adding a garbage collector}{71}{Appendix}{103}
\@definepageanchor{99}
\@definelabel{p.How to use}{99}{page}{103}
\@definepageanchor{99}
\@definepageanchor{100}
\@definelabel{p.Rescaling the garbage collector}{100}{page}{104}
\@definepageanchor{100}
\@definepageanchor{101}
\@definelabel{p.An example implementation}{101}{page}{105}
\@definepageanchor{101}
\@definepageanchor{103}
\@definelabel{p.Other notes}{104}{page}{108}
\@definepageanchor{104}
\@definepageanchor{105}
\@definelabel{p.Encrypted scripts}{106}{page}{110}
\@definelabel{Encrypted scripts}{72}{Appendix}{110}
\@definepageanchor{106}
\@definelabel{p.Running scripts from ROM}{107}{page}{111}
\@definelabel{Running scripts from ROM}{73}{Appendix}{111}
\@definepageanchor{107}
\@definelabel{mb.22}{107}{marginbox}{111}
\@definepageanchor{107}
\@definepageanchor{109}
\@definelabel{p.A microcontroller project}{110}{page}{113}
\@definepageanchor{110}
\@definepageanchor{111}
\@definepageanchor{113}
\@definepageanchor{114}
\@definelabel{p.Running scripts with overlays}{115}{page}{119}
\@definelabel{Running scripts with overlays}{74}{Appendix}{119}
\@definelabel{p.app.overlays}{115}{page}{119}
\@definepageanchor{115}
\@definelabel{p.Configuring the compiler}{115}{page}{119}
\@definelabel{p.Initializing the abstract machine}{116}{page}{120}
\@definelabel{p.The overlay callback function}{117}{page}{120}
\@definelabel{mb.23}{117}{marginbox}{121}
\@definelabel{p.Loading scripts with and without overlays}{118}{page}{121}
\@definelabel{p.License}{119}{page}{123}
\@definelabel{License}{75}{Appendix}{123}
\@definepageanchor{119}
\@definelabel{p.Index}{123}{page}{127}
